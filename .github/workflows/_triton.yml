name: triton-test
on:
  workflow_call:
    inputs:
      docker-image:
        required: true
        type: string
        description: Image to test on
      runner:
        required: false
        type: string
        description: Runner type for the test
        default: linux.12xlarge
      timeout-minutes:
        required: false
        type: number
        default: 270
        description: |
          Set the maximum (in minutes) how long the workflow should take to finish
    secrets:
      gcloud-service-key:
        required: true
        description: Secret to access Bazel build cache
jobs:
  test:
    runs-on: ${{ inputs.runner }}
    timeout-minutes: ${{ inputs.timeout-minutes }}
    env:
      DOCKER_IMAGE: ${{ inputs.docker-image }}
      WORKDIR: /var/lib/jenkins/workspace
      GCLOUD_SERVICE_KEY: ${{ secrets.gcloud-service-key }}
    steps:
      - name: Setup Linux
        uses: pytorch/test-infra/.github/actions/setup-linux@main
      - name: Setup SSH (Click me for login details)
        uses: pytorch/test-infra/.github/actions/setup-ssh@main
        with:
          github-secret: ${{ secrets.GITHUB_TOKEN }}
          instructions: |
            Tests are done inside the container, to start an interactive session run:
              docker exec -it $(docker container ps --format '{{.ID}}') bash
      - name: Install gcloud CLI
        if: ${{ inputs.collect-coverage }}
        shell: bash
        run: |
          sudo tee -a /etc/yum.repos.d/google-cloud-sdk.repo << EOM
          [google-cloud-cli]
          name=Google Cloud CLI
          baseurl=https://packages.cloud.google.com/yum/repos/cloud-sdk-el8-x86_64
          enabled=1
          gpgcheck=1
          repo_gpgcheck=0
          gpgkey=https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
          EOM
          sudo yum install -y google-cloud-cli
      - name: Auth to GCR
        if: ${{ inputs.collect-coverage }}
        shell: bash
        run: |
          echo "${GCLOUD_SERVICE_KEY}" | gcloud auth activate-service-account --key-file=-
      - name: Download and run docker image from GCR
        shell: bash
        run: |
          echo "DOCKER_IMAGE: ${DOCKER_IMAGE}"
          docker pull "${DOCKER_IMAGE}"
          pid=$(docker run --shm-size=16g ${GPU_FLAG:-} -t -d -w "$WORKDIR" "${DOCKER_IMAGE}")
          echo "${GCLOUD_SERVICE_KEY}" | docker exec -i "${pid}" sh -c "cat >> /tmp/pytorch/xla/default_credentials.json"
          echo "pid=${pid}" >> "${GITHUB_ENV}"
      - name: Test
        shell: bash
        run: |
          docker exec --privileged -u jenkins "${pid}" bash -c '.circleci/triton.sh'
      - name: Teardown Linux
        uses: pytorch/test-infra/.github/actions/teardown-linux@main
        if: always()

