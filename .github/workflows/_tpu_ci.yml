name: TPU Integration Test
on:
  workflow_call:
jobs:
  tpu-test:
    runs-on: v4-runner-set
    strategy:
      fail-fast: false
      matrix:
        topology:
          # default, 4 processes per host
          - ""
          # multithreaded, 1 process per host
          - "TPU_PROCESS_BOUNDS=1,1,1 TPU_CHIPS_PER_PROCESS_BOUNDS=2,2,1"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          path: pytorch/xla
      - name: Fetch wheels
        uses: actions/download-artifact@v4
        with:
          name: torch-xla-wheels
          path: /tmp/wheels/
      - name: Install wheels
        shell: bash
        run: |
          pip install /tmp/wheels/*.whl
      - name: Install test dependencies
        shell: bash
        run: |
          # TODO: Add these in setup.py
          pip install fsspec
          pip install rich
          # Jax nightly is needed for pallas tests.
          pip install torch_xla[pallas] -f https://storage.googleapis.com/jax-releases/jax_nightly_releases.html -f https://storage.googleapis.com/jax-releases/jaxlib_nightly_releases.html
          pip install torch_xla[tpu] -f https://storage.googleapis.com/libtpu-releases/index.html
      - name: Run Tests
        env:
          PJRT_DEVICE: TPU
        run: |
          if [[ -z "${{ matrix.topology }}" ]]; then
            export ${{ matrix.topology }}
          fi;
          cd pytorch/xla
          test/tpu/run_tests.sh
